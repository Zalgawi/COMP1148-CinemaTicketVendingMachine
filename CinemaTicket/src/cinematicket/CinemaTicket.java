package cinematicket;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zayd
 */
import java.text.DecimalFormat;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
public class CinemaTicket extends javax.swing.JFrame {

    
    /**
     * Creates new form CinemaTicket
     */
    public CinemaTicket() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel37 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        ChQ = new javax.swing.JComboBox<>();
        AdQ = new javax.swing.JComboBox<>();
        AdPrice = new javax.swing.JTextField();
        ChPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        SubT = new javax.swing.JTextField();
        VIP = new javax.swing.JRadioButton();
        Front = new javax.swing.JRadioButton();
        Middle = new javax.swing.JRadioButton();
        Back = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        Total_P = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Change_D = new javax.swing.JTextField();
        jPanel38 = new javax.swing.JPanel();
        p10 = new javax.swing.JButton();
        p20 = new javax.swing.JButton();
        £1 = new javax.swing.JButton();
        p50 = new javax.swing.JButton();
        £2 = new javax.swing.JButton();
        £5 = new javax.swing.JButton();
        £10 = new javax.swing.JButton();
        £20 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        Total_Paid = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        SelectMov = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        SelectTim = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        SelectDat = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Select Seat:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        ChQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Quantity-", "1", "2", "3", "4", "5", "6" }));
        ChQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChQActionPerformed(evt);
            }
        });

        AdQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Quantity-", "1", "2", "3", "4", "5", "6" }));
        AdQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdQActionPerformed(evt);
            }
        });

        AdPrice.setEditable(false);
        AdPrice.setText("0.00");
        AdPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdPriceActionPerformed(evt);
            }
        });

        ChPrice.setEditable(false);
        ChPrice.setText("0.00");
        ChPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChPriceActionPerformed(evt);
            }
        });

        jLabel7.setText("Adult");

        jLabel8.setText("Child");

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Sub-total");

        SubT.setEditable(false);
        SubT.setText("£0.00");
        SubT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubTActionPerformed(evt);
            }
        });

        VIP.setText("VIP");
        VIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VIPActionPerformed(evt);
            }
        });

        Front.setText("Front");
        Front.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FrontActionPerformed(evt);
            }
        });

        Middle.setText("Middle");
        Middle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MiddleActionPerformed(evt);
            }
        });

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(VIP, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Front, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Middle, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(ChQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(ChPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(AdQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(AdPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubT, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(SubT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VIP)
                    .addComponent(Front)
                    .addComponent(Middle)
                    .addComponent(Back))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(AdQ)
                    .addComponent(AdPrice)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChPrice)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setText("Total Price:");

        Total_P.setEditable(false);
        Total_P.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Total_P.setText("0.00");
        Total_P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Total_PActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setText("Change Due:");

        Change_D.setEditable(false);
        Change_D.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Change_D.setText("0.00");
        Change_D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_DActionPerformed(evt);
            }
        });

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Amount Paid:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        p10.setText("10p");
        p10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10ActionPerformed(evt);
            }
        });

        p20.setText("20p");
        p20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p20ActionPerformed(evt);
            }
        });

        £1.setText("£1.00");
        £1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        £1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                £1ActionPerformed(evt);
            }
        });

        p50.setText("50p");
        p50.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        p50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p50ActionPerformed(evt);
            }
        });

        £2.setText("£2.00");
        £2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        £2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                £2ActionPerformed(evt);
            }
        });

        £5.setText("£5.00");
        £5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        £5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                £5ActionPerformed(evt);
            }
        });

        £10.setText("£10");
        £10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        £10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                £10ActionPerformed(evt);
            }
        });

        £20.setText("£20");
        £20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        £20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                £20ActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addComponent(p10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(p20, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(p50, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(£1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createSequentialGroup()
                        .addComponent(£2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(£5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(£10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(£20, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(p10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p20, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p50, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(£1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(£2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(£5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(£10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(£20, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setLayout(null);

        jLabel16.setText("jLabel16");
        jPanel16.add(jLabel16);
        jLabel16.setBounds(70, 85, 48, 16);

        jButton2.setText("Sign out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Procceed");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setText("Total Paid:");

        Total_Paid.setEditable(false);
        Total_Paid.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Total_Paid.setText("0.00");
        Total_Paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Total_PaidActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Movie:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        SelectMov.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Choose a film-", "T2 Trainspotting (Drama Film/Comedy)", "Sing (Drama Film/Musical/Comedy/Family/Animation)", "Split (Thriller/Horror)", "La La Land (Drama Film/Romance/Comedy)", "Moana (Fantasy/Action/Adventure/Animation)", "Rogue One: A Star Wars Story (Science Fiction Film/Action)", "The Lego Batman Movie (Fantasy/Comedy/Animation)" }));
        SelectMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectMovActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectMov, 0, 436, Short.MAX_VALUE)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectMov, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time of Show:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        SelectTim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Choose a time-", "09:00AM", "10:00AM", "11:00AM", "12:00PM", "13:00PM", "14:00PM", "15:00PM", "16:00PM", "17:00PM", "18:00PM" }));
        SelectTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectTim, 0, 436, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SelectTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date of Show:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 18))); // NOI18N

        SelectDat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Choose a Date-", "Today", "Tomorrow", "Tuesday Feb 4th", "Wednedsay Feb 5th", "Thursday Feb 6th", "Friday Feb 7th", "Saturday Feb 8th" }));
        SelectDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectDatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SelectDat, 0, 436, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SelectDat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Clear All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Total_P, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Change_D))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Total_Paid, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(Total_P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Total_Paid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Change_D, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Total_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Total_PActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Total_PActionPerformed

    private void Change_DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_DActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Change_DActionPerformed

    private void p10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10ActionPerformed
        // This statement ensures that the quantity of tickets selected must be over 1 before any change can be inputted.
 if (              AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1 )

        {
            //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
        //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.
        BigDecimal generator = new BigDecimal("0.10");
        
        //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 0.10)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
        //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
            //The following else statement will mean that no tickets are selected then the error message will pop up saying "Please select your ticket(s)"
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_p10ActionPerformed

    private void p20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p20ActionPerformed
        // TODO add your handling code here:
 if (
                AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
)
        {
            //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.            
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
        //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.        
        BigDecimal generator = new BigDecimal("0.20");
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 0.20)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_p20ActionPerformed

    private void £1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_£1ActionPerformed
        // TODO add your handling code here:
 if (AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
              )
        {
              //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.          
        BigDecimal number = new BigDecimal(Total_Paid.getText());
         //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.       
        BigDecimal generator = new BigDecimal("1.0");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 1.00)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_£1ActionPerformed

    private void p50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p50ActionPerformed
        // TODO add your handling code here:
 if (AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
                )
        {
             //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.           
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
          //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.      
        BigDecimal generator = new BigDecimal("0.50");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 0.50)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_p50ActionPerformed

    private void £2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_£2ActionPerformed
        // TODO add your handling code here:
 if (AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
               )
        {
            //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.            
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
         //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.       
        BigDecimal generator = new BigDecimal("2.0");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 2.00)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_£2ActionPerformed

    private void £5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_£5ActionPerformed
        // TODO add your handling code here:
 if (AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
                )
        {
            //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.            
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
         //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.       
        BigDecimal generator = new BigDecimal("5.0");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 5.00)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
    }//GEN-LAST:event_£5ActionPerformed

    private void £10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_£10ActionPerformed
        // TODO add your handling code here:
 if (AdQ.getSelectedIndex()>=1
                ||ChQ.getSelectedIndex()>=1
                )
        {
            //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.            
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
         //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.       
        BigDecimal generator = new BigDecimal("10.0");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 10.00)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select you ticket(s)");
    }//GEN-LAST:event_£10ActionPerformed

    private void £20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_£20ActionPerformed
        // TODO add your handling code here:
if (AdQ.getSelectedIndex()>=1)
        {
             //The following code enables the Total_Paid string of numbers to convert into a Big Decimal format,
            //which allows you to add / subtract any number within those text fields.           
        BigDecimal number = new BigDecimal(Total_Paid.getText());
        
        //The following code ensures that all decimal numbers given (added or subtracted) will be an exact value, rather than a long string of numbers.        
        BigDecimal generator = new BigDecimal("20.0");
        
         //This part of the code adds whatever number is in the Total_Paid field with the number value that is provided. (In this case it's 20.00)
        number = number.add(generator);
        
        //This code does the opposite of "BigDecimal number", it converts the numbers from BigDecimal back to a string in order for it to be displayed in the string output / input
        Total_Paid.setText(number.toString());
        
         //The following section of code has the same functions as the previous lines within this section.
        BigDecimal number1 = new BigDecimal(Total_P.getText());
        BigDecimal number2 = new BigDecimal(Total_Paid.getText());
        number = number2.subtract(number1);
        Change_D.setText(number.toString());
        
        }
        else
            JOptionPane.showMessageDialog(null,"Please select you ticket(s)");
    }//GEN-LAST:event_£20ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //This button is reponsible for signing out
        setVisible(false);
        Log_in Fr = new Log_in();
        Fr.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                // This set of code takes the information in the Total Paid text box as a string (default)
            String ChangeStr = Total_Paid.getText();
            
            //This code converts the information from a string to a double
            double ChPrice = Double.parseDouble (ChangeStr);
            
            //This is the same as the code above.
            String ChangeStr1 = Total_P.getText();
            double ChPrice1 = Double.parseDouble (ChangeStr1);

            //This code acquires the two numbers converted from string to double and used in the code after.
            double num1= ChPrice;
            double num2= ChPrice1;
            
            //This part of the code does a similar task to the one before, except instead of one or the other requirement needing to be met, you need one
            //to be met and for num1 (Total_paid textfield) to be greater or equal to num2 (Total_P)
            if (AdQ.getSelectedIndex()>=1|| ChQ.getSelectedIndex()>=1&&(num1 >= num2))
            {
            
            setVisible(false);
            
            //The following codes are responsible for the delivering the information from the CinemaTicket class to the Receipt class.
        Receipt Gt = new Receipt();
        
        //The following 3 lines of code take the information that is inputted for the Movie title, time and date and then printing it out as a string of text / numbers on to the responsible text fields on the receipt page.
        Receipt.FilmName.setText((String) this.SelectMov.getSelectedItem());
        Receipt.FilmTime.setText((String) this.SelectTim.getSelectedItem());
        Receipt.FilmDate.setText((String) this.SelectDat.getSelectedItem());
            
        //The next 3 lines of code work in the same way as the previous 3, but instead of printing it as a string, it is just grabbing the information from the total price, amount paid and change due variables and inserting it on the responsible text fields on the receipt page.
        Receipt.ReceiptPrice.setText("£"+this.Total_P.getText());
        Receipt.ReceiptPaid.setText("£"+this.Total_Paid.getText());
        Receipt.ReceiptChange.setText("£"+this.Change_D.getText());
        
        //The following if statement is responsible for displaying which seat position is selected (Any of VIP, Front, Middle or Back) on the correct text field.
        if (VIP.isSelected()){ 
            Receipt.SeatPos.setText(this.VIP.getText());
        }
        if (Front.isSelected()){
            Receipt.SeatPos.setText(this.Front.getText());
        }
        if (Back.isSelected()){ 
            Receipt.SeatPos.setText(this.Back.getText());
        }
        if (Middle.isSelected()){ 
            Receipt.SeatPos.setText(this.Middle.getText());
        }
        
        //This last part of the code enables the ticket quantities for Adult(s) and Children is placed in the right text field on the receipt page as a string.
          Receipt.AdQuantity.setText((String) this.AdQ.getSelectedItem());
          Receipt.ChQuantity.setText((String) this.ChQ.getSelectedItem());
          
         Gt.setVisible(true);
            
            }
           //The else part of the If statement means that if none of the seat options are selected, then the following error message will pop up. 
          else         
             JOptionPane.showMessageDialog(null,"Please select your ticket(s)");
         
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // The following code resets all values in Total_Paid and Change_D to "0.00"

       Total_Paid.setText("0.00");
       Change_D.setText("0.00");
                                
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Total_PaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Total_PaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Total_PaidActionPerformed

    private void SelectMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectMovActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectMovActionPerformed

    private void SelectDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectDatActionPerformed
        //The following code makes sure that the movie date can not be  selected until the movie itself is selected.
        if (SelectMov.getSelectedIndex()>=1)
        { 
            
        }
        else {SelectDat.setSelectedIndex(0);

        }
    }//GEN-LAST:event_SelectDatActionPerformed

    private void AdQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdQActionPerformed
        // The following code allows us to decide how many decimal places we want our number to go by. (In this scenario it would be to 2 decimal places)
         DecimalFormat numberFormatter = new DecimalFormat("0.00"); 
         
         //The next part of the code means that if any one of these seat positions / requirements are met, then the code below will be read. Only one requirement has to be met because " || " means "or".
        if (VIP.isSelected()|| Front.isSelected() || Middle.isSelected() || Back.isSelected())
        {
         
         //This is the similar to the last code, except this only has one requirement to be met.
        if (VIP.isSelected( ) ) {
            
//This following code allows the program to get the ticket quantity for the Adult(s) and multiyply by the price set (12.90) and then the ticket quantity 
//for the Children and multiplying that by the price set (11.40)  and then adding the two answers together and displaying it in the 
//designated text field as a decimal format.  (The rest of the else if statements repeat the same proccess)
        SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*12.90 + ChQ.getSelectedIndex()*11.40));
        } else if (Front.isSelected( ) ) {
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*9.50 + ChQ.getSelectedIndex()*8.00));
        } else if (Middle.isSelected( ) ) {
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*7.30 + ChQ.getSelectedIndex()*5.80));
        } else if (Back.isSelected( ) ) { 
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*6.70 + ChQ.getSelectedIndex()*5.20));
        } 

        //This code retrieves whatever is in the Sub Total text box and placing it in the Total cost field.
    Total_P.setText(SubT.getText());
        
    //This final part ensures that the code sets the Adult ticket quantity to 0 if the first "if" variable isn't met.
        }else AdQ.setSelectedIndex(0);
             
    }//GEN-LAST:event_AdQActionPerformed

    private void ChQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChQActionPerformed
                // The following code allows us to decide how many decimal places we want our number to go by. (In this scenario it would be to 2 decimal places)
        DecimalFormat numberFormatter = new DecimalFormat("0.00");
        
         //The next part of the code means that if any one of these seat positions / requirements are met, then the code below will be read. Only one requirement has to be met because " || " means "or".
                if (VIP.isSelected()|| Front.isSelected() || Middle.isSelected() || Back.isSelected())
        {
         
                     //This is the similar to the last code, except this only has one requirement to be met.
        if (VIP.isSelected( ) ) {
            
  //This following code allows the program to get the ticket quantity for the Adult(s) and multiyply by the price set (12.90) and then the ticket quantity 
//for the Children and multiplying that by the price set (11.40)  and then adding the two answers together and displaying it in the 
//designated text field as a decimal format.  (The rest of the else if statements repeat the same proccess)
        SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*12.90 + ChQ.getSelectedIndex()*11.40));
        } else if (Front.isSelected( ) ) {
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*9.50 + ChQ.getSelectedIndex()*8.00));
        } else if (Middle.isSelected( ) ) {
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*7.30 + ChQ.getSelectedIndex()*5.80));
        } else if (Back.isSelected( ) ) { 
        SubT.setText ( numberFormatter.format(AdQ.getSelectedIndex()*6.70 + ChQ.getSelectedIndex()*5.20));
        } 

                //This code retrieves whatever is in the Sub Total text box and placing it in the Total cost field.
    Total_P.setText(SubT.getText());
    
        //This final part ensures that the code sets the Child ticket quantity to 0 if the first "if" variable isn't met.
            }else        ChQ.setSelectedIndex(0);
                 
    }//GEN-LAST:event_ChQActionPerformed

    private void ChPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChPriceActionPerformed

    private void AdPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdPriceActionPerformed

    private void VIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VIPActionPerformed
        //The following code  ensures that the total at subtotal prices stay at 2 decimal places.
         DecimalFormat numberFormatter = new DecimalFormat("0.00");
             if (SelectTim.getSelectedIndex()>=1)
        { 
            //The next part of the code means that when the VIP seating option is selected, then all other options will be disabled / set to false. The prices for the Adult+Child VIP seats are then displayed.
            if  (VIP.isSelected()){
            Front.setSelected(false) ;
            Middle.setSelected(false);
            Back.setSelected(false);
            AdPrice.setText("12.90");
            ChPrice.setText("11.40");
            
        //The following code calculates the sub-total cost by multiplying the quantity of tickets selected with the price that is now displayed. (In this case, the VIP seats)
       SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*12.90 + ChQ.getSelectedIndex()*11.40));
 
        }
            //The following code sets the total cost by taking the text within the sub-total. 
            Total_P.setText(SubT.getText());
        }
             //This code ensures that if the VIP seat button is not selected, then it will instantly be regarded / set to false.
        else {VIP.setSelected(false);

        }
           
 
 
  
    }//GEN-LAST:event_VIPActionPerformed

    private void FrontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FrontActionPerformed
        //The following code  ensures that the total at subtotal prices stay at 2 decimal places.
        DecimalFormat numberFormatter = new DecimalFormat("0.00");
        if (SelectTim.getSelectedIndex()>=1)
            {
                //The next part of the code means that when the Front seating option is selected, then all other options will be disabled / set to false. The prices for the Adult+Child Front seats are then displayed.
        if  (Front.isSelected()){
            VIP.setSelected(false) ;
            Middle.setSelected(false);
            Back.setSelected(false);
            AdPrice.setText("9.50");
            ChPrice.setText("8.00");
            
                    //The following code calculates the sub-total cost by multiplying the quantity of tickets selected with the price that is now displayed. (In this case, the Front seats)
          SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*9.50 + ChQ.getSelectedIndex()*8.00));
        }
        
                    //The following code sets the total cost by taking the text within the sub-total. 
            Total_P.setText(SubT.getText());
            }
                     //This code ensures that if the Front seat button is not selected, then it will instantly be regarded / set to false.
        else {Front.setSelected(false);
        
        }
    }//GEN-LAST:event_FrontActionPerformed

    private void MiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MiddleActionPerformed
        //The following code  ensures that the total at subtotal prices stay at 2 decimal places.
        DecimalFormat numberFormatter = new DecimalFormat("0.00");
        if  (SelectTim.getSelectedIndex()>=1)
        {
            //The next part of the code means that when the Middle seating option is selected, then all other options will be disabled / set to false. The prices for the Adult+Child Middle seats are then displayed.
            if (Middle.isSelected()){
            VIP.setSelected(false) ;
            Front.setSelected(false);
            Back.setSelected(false);
            AdPrice.setText("7.30");
            ChPrice.setText("5.80");
            
                    //The following code calculates the sub-total cost by multiplying the quantity of tickets selected with the price that is now displayed. (In this case, the Middle seats)
            SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*7.30 + ChQ.getSelectedIndex()*5.80));
        }
                        //The following code sets the total cost by taking the text within the sub-total. 
            Total_P.setText(SubT.getText());
        }
                     //This code ensures that if the Middle seat button is not selected, then it will instantly be regarded / set to false.
        else {Middle.setSelected(false);
        
        }
    }//GEN-LAST:event_MiddleActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        //The following code  ensures that the total at subtotal prices stay at 2 decimal places.
        DecimalFormat numberFormatter = new DecimalFormat("0.00");
        if  (SelectTim.getSelectedIndex()>=1)
        {
            //The next part of the code means that when the Back seating option is selected, then all other options will be disabled / set to false. The prices for the Adult+Child Back seats are then displayed.
            if (Back.isSelected()){
            VIP.setSelected(false) ;
            Middle.setSelected(false);
            Front.setSelected(false);
            AdPrice.setText("6.70");
            ChPrice.setText("5.20");
            
                    //The following code calculates the sub-total cost by multiplying the quantity of tickets selected with the price that is now displayed. (In this case, the Back seats)
          SubT.setText( numberFormatter.format(AdQ.getSelectedIndex()*6.70 + ChQ.getSelectedIndex()*5.20));
        }
                        //The following code sets the total cost by taking the text within the sub-total. 
            Total_P.setText(SubT.getText());
        }
                     //This code ensures that if the Back seat button is not selected, then it will instantly be regarded / set to false.
        else {Back.setSelected(false);
        
        }
    }//GEN-LAST:event_BackActionPerformed

    private void SubTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubTActionPerformed

    private void SelectTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectTimActionPerformed
        // The following code ensures that a film time can not be selected until the film date is selected.
             if (SelectDat.getSelectedIndex()>=1)
        { 
            
        }
        else {SelectTim.setSelectedIndex(0);

        }
    }//GEN-LAST:event_SelectTimActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //This is the main clear button, the following codes reset all the different variables back to 0, false or "£0.00"
                SelectMov.setSelectedIndex(0);
        SelectTim.setSelectedIndex(0);
       AdQ.setSelectedIndex(0);
       ChQ.setSelectedIndex(0);
       SelectDat.setSelectedIndex(0);
       VIP.setSelected(false);
       Front.setSelected(false);
       Middle.setSelected(false);
       Back.setSelected(false);
       Total_P.setText("0.00");
       Total_Paid.setText("0.00");
       Change_D.setText("0.00");
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CinemaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CinemaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CinemaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CinemaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CinemaTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdPrice;
    private javax.swing.JComboBox<String> AdQ;
    private javax.swing.JRadioButton Back;
    private javax.swing.JTextField ChPrice;
    private javax.swing.JComboBox<String> ChQ;
    private javax.swing.JTextField Change_D;
    private javax.swing.JRadioButton Front;
    private javax.swing.JRadioButton Middle;
    private javax.swing.JComboBox<String> SelectDat;
    private javax.swing.JComboBox<String> SelectMov;
    private javax.swing.JComboBox<String> SelectTim;
    private javax.swing.JTextField SubT;
    private javax.swing.JTextField Total_P;
    private javax.swing.JTextField Total_Paid;
    private javax.swing.JRadioButton VIP;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton p10;
    private javax.swing.JButton p20;
    private javax.swing.JButton p50;
    private javax.swing.JButton £1;
    private javax.swing.JButton £10;
    private javax.swing.JButton £2;
    private javax.swing.JButton £20;
    private javax.swing.JButton £5;
    // End of variables declaration//GEN-END:variables
}
